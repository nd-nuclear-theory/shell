shell project installation -- summary for NERSC Edison

Please see install.txt for the general discussion of installation.
This file just provides the quick reference summary for NERSC Edison.

10/28/16 (mac): Created.

----------------------------------------------------------------

1) Retrieving source

Change to the directory where you want the repository to be installed,
e.g.,

  % cd ~/projects

Clone the shell repository and all submodules.  You will be asked for
your ND netid password several times.  In the following, replace "netid" with your ND NetID.

  % git clone --recursive ssh://netid@crcfe01.crc.nd.edu/afs/crc.nd.edu/group/nuclthy/git/shell.git

Then change to the shell project directory for all the following
steps:

  % cd shell

Workaround: If the process hangs, kill with Ctrl-C, clean up with "rm
-rf shell", and try again.  If it keeps hanging, split up the
process...

  % git clone ssh://netid@crcfe01.crc.nd.edu/afs/crc.nd.edu/group/nuclthy/git/shell.git
  % cd shell
  % submodule init
  % submodule update

and repeat submodule update until all submodules have been successfully cloned.

1') Subsequently updating source

  % git pull
  % git submodule update

2) Compiler

   You can use the default intel compiler suite, or you can compile
   under gnu.  See the build instructions below for the correct modules
   to load.

3) Libraries

   All needed libraries (Eigen and GSL) are already installed on
   Edison.  See the build instructions below for the correct modules
   to load.

4) Makefile configuration

   You need to create a symbolic link "config.mk" to point to the
   correct configuration file.  You can use the predefined
   configuration files in shell/config.

   For compiling under gcc4 or gcc5, you should be able to use:

   % ln -s config/config-gcc-craype.mk config.mk

   For compiling under intel, you should be able to use:

   % ln -s config/config-intel-craype.mk config.mk

5) Build

   At compile time, you will need to load modules to access the above
   libraries:

   % module load boost
   % module load gsl
   % module load eigen3

   For reference, we note that the following are the current default
   versions as of 10/28/16:

   % module load boost/1.54
   % module load gsl/1.16
   % module load eigen3/3.2.0   [note: this is a pretty old version]

   As a shortcut:

   % source config/module-load-nersc-edison.csh

   If you prefer to to switch from the intel compiler to the gnu
   compiler:

   % module swap PrgEnv-intel PrgEnv-gnu

   Then for the actual build (parallel make with -j option is
   recommended):

   % make all -j8

6) Sanity check:

   % cd programs/h2utils
   % ./h2stat verify test/test-tb-2.dat

   You should see something like the following output:

      h2stat  -- MFDn H2 file statistics

      Input stream
        File: test/test-tb-2.dat
        Format: 0 (text)
        Orbitals: p 6 n 6 (oscillator-like true)
        Truncation: p 2.0000 n 2.0000 pp 2.0000 nn 2.0000 pn 2.0000
        Sectors: pp 7 nn 7 pn 7 => total 21
        Matrix elements: pp 32 nn 32 pn 110 => total 174

      Statistics mode: verify

      Verification scan
      .....................
      (Total time: 0)   

----------------------------------------------------------------

Notes:

10/28/16 (mac): successful build with gnu

   boost/1.54
   gsl/1.16
   eigen3/3.2.0
   PrgEnv-gnu => gcc/6.1.0

10/28/16 (mac): FAILING build with intel

   PrgEnv-intel => intel/15.0.1.133

In file included from ./libraries/moshinsky/moshinsky_xform.h(36),
                 from libraries/moshinsky/moshinsky_xform.cpp(9):
./libraries/basis/lsjt_scheme.h(200): error: argument list for class template "basis::BaseState" is missing
        : BaseState (subspace, index) {}
          ^
