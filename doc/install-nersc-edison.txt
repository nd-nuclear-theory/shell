shell project installation -- summary for NERSC Edison

Please see install.txt for the general discussion of installation.
This file just provides the quick reference summary for NERSC Edison.

10/28/16 (mac): Created.
10/29/16 (mac): Updated with pjf's Intel compilation fix.

----------------------------------------------------------------

1) Retrieving source

Change to the directory where you want the repository to be installed,
e.g.,

  % cd ~/projects

Clone the shell repository and all submodules.  You will be asked for
your ND netid password several times.  In the following, replace "netid" with your ND NetID.

  % git clone --recursive ssh://netid@crcfe01.crc.nd.edu/afs/crc.nd.edu/group/nuclthy/git/shell.git

Then change to the shell project directory for all the following
steps:

  % cd shell

Workaround: If the process hangs, kill with Ctrl-C, clean up with "rm
-rf shell", and try again.  If it keeps hanging, split up the
process...

  % git clone ssh://netid@crcfe01.crc.nd.edu/afs/crc.nd.edu/group/nuclthy/git/shell.git
  % cd shell
  % submodule init
  % submodule update

and repeat submodule update until all submodules have been successfully cloned.

1') Subsequently updating source

  % git pull
  % git submodule update

2) Compiler

   You can use the default intel compiler suite, or you can compile
   under gnu.  See the build instructions below for the correct modules
   to load.

3) Libraries

   All needed libraries (Boost, Eigen, and GSL) are already installed
   on Edison.  See the build instructions below for the correct
   modules to load.

4) Makefile configuration

   You need to create a symbolic link "config.mk" to point to the
   correct configuration file.  You can use the predefined
   configuration files in shell/config.

   For compiling under gcc, you should be able to use:

   % ln -s config/config-gcc-craype.mk config.mk

   For compiling under intel, you should be able to use:

   % ln -s config/config-intel-craype.mk config.mk

   It is important to use these "...-craype.mk" config files, since
   they configure make to invoke the correct Cray Programming
   Environment compiler wrapper "CC", which has the correct settings
   to generate executables for the compute nodes, instead of invoking
   the generic "g++" or "icpc".

5) Build

   Even if using the intel compiler suite, loading GCC 4.8+ (for C++11
   compatibility) is still required. It is used internally by icpc.

   % module load gcc

   At compile time, you will also need to load modules to access the
   above libraries:

   % module load boost
   % module load gsl
   % module load eigen3

   As a shortcut, these module load instructions have all been saved
   to a file in the config directory:

   % source config/module-load-nersc-edison.csh

   If you prefer to switch from the intel compiler to the gnu
   compiler:

   % module swap PrgEnv-intel PrgEnv-gnu

   Then for the actual build (parallel make with -j option is
   recommended):

   % make all -j8

6) Sanity check:

   % cd programs/h2utils
   % ./h2stat
   % ./h2stat --verify test/test-tb-2.dat

   You should see something like the following output:

      h2stat  -- MFDn H2 file statistics
      
      Input stream
        File: test/test-tb-2.dat
        Format: 0 (text)
        Orbitals: p 6 n 6 (oscillator-like true)
        Truncation: p 2.0000 n 2.0000 pp 2.0000 nn 2.0000 pn 2.0000
        Sectors: pp 7 nn 7 pn 7 => total 21
        Matrix elements: pp 32 nn 32 pn 110 => total 174
      
      Mode: verify
      
      Verification scan
      .....................
      (Total time: 0)

----------------------------------------------------------------

Notes:

10/28/16 (mac): For reference, we note that the following are the
   current default versions as of 10/29/16:

   % module load gcc/6.1.0
   % module load boost/1.54
   % module load gsl/1.16
   % module load eigen3/3.2.0 

Note: This is a pretty old version of eigen which gives lots of
warnings under gcc.

Successful build with gnu (PrgEnv-gnu => gcc/6.1.0).  Failing build
with intel (PrgEnv-intel => intel/15.0.1.133).

10/29/16 (pjf e-mail): I just found a particularly nasty interaction
between compilers on NERSC. It appears that, internally, icpc calls
gcc. The simple answer is, you need to have at least GCC 4.8
loaded. Call 'module load gcc/4.8.0' or higher (the default 6.1.0 is
preferred). It's probably a good idea to call 'module load
intel/16.0.0.109' or 'module load intel/17.0.0.098' to get a newer
version of icpc too.
